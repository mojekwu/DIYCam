extends layout

block variables
  - const title = "Map - DIYCam"
  - res_output = res_output
//-   - location_arr = location_arr.replace(/(&quot\;)/g,"\"")

block content
  .d-md-flex.h-md-100.align-items-center
    //- First Half
    .col-md-6.p-0.bg-green.h-md-100
      .text-white.d-md-flex.align-items-center.h-100.p-5.text-center.justify-content-center.upload-area
        .logoarea.pt-5.pb-5
          .wrapper
            form#gen-map(action="/gen_map" method="POST" enctype="multipart/form-data")
              input#search-bar.map-bar(type="text" name="place" placeholder="Search...")
              a
                i.icon.ion-md-radio-button-off.map-icon

    //- Second Half
    .second-half.col-md-6.p-0.bg-white.h-md-100
        .d-md-flex.h-md-100.p-5.justify-content-center
            .p-5.w-100
                if(res_output != undefined)
                    - for(var i=0; i<res_output.length; i++)
                        .card
                            .card-header
                                | #{res_output[i].name}
                            .card-body
                                h5.card-title #{res_output[i].vicinity}
        #map
    script.
        mapboxgl.accessToken =
        "pk.eyJ1Ijoiam9yZGFubWFwIiwiYSI6IjRUOVBuV28ifQ.ubu4SCJhADfVRbncXCXiPg";
        var map = new mapboxgl.Map({
        container: "map",
        style: "mapbox://styles/mapbox/dark-v9",
        center: [-73.9563087, 40.729249],
        zoom: 15.7
        });

        map.on("load", function() {
        map.addSource("other-place-data", {
            type: "vector",
            tiles: [
            "https://tiles.lavamap.com/services/vector-tiles/assistant_map_data_201712/{z}/{x}/{y}.pbf"
            ],
            cluster: true,
            clusterMaxZoom: 14,
            clusterRadius: 50
        });

        map.addLayer({
            id: "clusters",
            type: "circle",
            source: "other-place-data",
            "source-layer": "crimes",
            filter: ["has", "point_count"],
            paint: {
            "circle-color": {
                property: "point_count",
                type: "interval",
                stops: [[0, "#51bbd6"], [100, "#f1f075"], [750, "#f28cb1"]]
            },
            "circle-radius": {
                property: "point_count",
                type: "interval",
                stops: [[0, 20], [100, 30], [750, 40]]
            }
            }
        });

        map.addLayer({
            id: "cluster-count",
            type: "symbol",
            source: "other-place-data",
            "source-layer": "crimes",
            filter: ["has", "point_count"],
            layout: {
            "text-field": "{point_count_abbreviated}",
            "text-font": ["DIN Offc Pro Medium", "Arial Unicode MS Bold"],
            "text-size": 12
            }
        });

        map.addLayer({
            id: "unclustered-point",
            type: "circle",
            source: "other-place-data",
            "source-layer": "crimes",
            filter: ["!has", "point_count"],
            paint: {
            "circle-color": "#11b4da",
            "circle-radius": 4,
            "circle-stroke-width": 1,
            "circle-stroke-color": "#fff"
            }
        });
        });

